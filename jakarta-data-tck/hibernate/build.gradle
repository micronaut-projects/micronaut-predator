plugins {
    id "java-library"
    id "io.micronaut.build.internal.data-base"
    id "io.micronaut.build.internal.data-dependencies"
}

dependencies {

    testImplementation projects.micronautJakartaDataTck.micronautSupport
    testImplementation projects.micronautDataHibernateJpa
    testImplementation projects.micronautDataProcessor

    testImplementation libs.jakarta.data.tck
    testImplementation(libs.jakarta.data.tck) {
        artifact {
            classifier = "sources"
        }
    }

    testRuntimeOnly mnTest.junit.jupiter.engine
    testRuntimeOnly mnSql.micronaut.jdbc.tomcat
    testRuntimeOnly mnLogging.logback.classic
    testRuntimeOnly mnSql.h2
    testRuntimeOnly mn.snakeyaml
}

test {
    scanForTestClasses false
//    systemProperty("jakarta.tck.skip.deployment", "true")
    useJUnitPlatform()
    maxParallelForks = Runtime.runtime.availableProcessors().intdiv(2) ?: 1
}
